{"ast":null,"code":"import _slicedToArray from\"/home/aurimas/coding/idendro/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Streamlit}from\"streamlit-component-lib\";import*as d3 from'd3';import'./idendro.css';var Orientation;(function(Orientation){Orientation[\"top\"]=\"top\";Orientation[\"bottom\"]=\"bottom\";Orientation[\"right\"]=\"right\";Orientation[\"left\"]=\"left\";})(Orientation||(Orientation={}));function create_container(dimensions){if(d3.select(\"#idendro\")){d3.select(\"#idendro\").remove();}// append svg element to the body of the page\n// set dimensions and position of the svg element\nvar svg=d3.select(\"body\").append(\"svg\").attr(\"id\",\"idendro\").attr(\"width\",dimensions.width).attr(\"height\",dimensions.height);var plot=svg.append(\"g\").attr(\"transform\",\"translate(\"+dimensions.margin.left+\",\"+dimensions.margin.top+\")\").attr(\"id\",\"idendro-container\");return plot;}function create_axis(plot,dimensions,dendrogram,scale_type){var label_limits=dendrogram.x_domain;var value_limits=dendrogram.y_domain;var label_range,value_range=[0,0];var label_axis_func,value_axis_func;var label_axis_transform=[0,0];var value_axis_transform=[0,0];//handle orientation impact on scale ranges & positioning\nif(dimensions.orientation===Orientation.top||dimensions.orientation===Orientation.bottom){label_range=[0,dimensions.innerWidth];value_axis_func=d3.axisLeft;value_axis_transform=[0,0];if(dimensions.orientation===Orientation.top){value_range=[dimensions.innerHeight,0];label_axis_func=d3.axisBottom;label_axis_transform=[0,dimensions.innerHeight];}else{value_range=[0,dimensions.innerHeight];label_axis_func=d3.axisTop;}}else{value_axis_func=d3.axisBottom;label_range=[dimensions.innerHeight,0];value_axis_transform=[0,dimensions.innerHeight];if(dimensions.orientation===Orientation.left){value_range=[dimensions.innerWidth,0];label_axis_func=d3.axisRight;label_axis_transform=[dimensions.innerWidth,0];}else{value_range=[0,dimensions.innerWidth];label_axis_func=d3.axisLeft;}}//get label-axis positions and labels\nvar label_axis_pos=dendrogram.axis_labels.map(function(x){return x.x;});var label_axis_label=dendrogram.axis_labels.map(function(x){return x.label;});//create label-axis\nvar labelScale;labelScale=d3.scaleLinear().domain(label_limits).range(label_range);var labelAxisGenerator=label_axis_func(labelScale).tickValues(label_axis_pos).tickFormat(function(d,i){return label_axis_label[i];}).tickSize(3);var label_axis=plot.append(\"g\").attr(\"id\",\"label-axis\").attr(\"transform\",\"translate(\"+label_axis_transform[0]+\",\"+label_axis_transform[1]+\")\").call(labelAxisGenerator);//handle label position angles\nvar labelAngle=dendrogram.axis_labels[0].labelAngle;var anchor='start';var sign=1;if(labelAngle<0){anchor='end';sign=-1;}label_axis.selectAll(\"text\").attr(\"transform\",\"rotate(\"+labelAngle+\")\").attr(\"y\",Math.abs(sign*90-labelAngle)/7).attr(\"x\",labelAngle/5).attr(\"dy\",\".5em\").style(\"text-anchor\",anchor);//create value-axis\nvar valueScale;if(scale_type==='symlog'){valueScale=d3.scaleSymlog().constant(1);}else if(scale_type==='log'){valueScale=d3.scaleLog();}else{valueScale=d3.scaleLinear();}valueScale.domain(value_limits);valueScale.range(value_range);var valueAxisGenerator=value_axis_func(valueScale);plot.append(\"g\").attr(\"id\",\"value-axis\").attr(\"transform\",\"translate(\"+value_axis_transform[0]+\",\"+value_axis_transform[1]+\")\").call(valueAxisGenerator);return[labelScale,valueScale];}function draw_links(link_container,links,xScale,yScale){link_container.selectAll(\".link\").data(links).enter().append(\"path\").attr(\"fill\",\"none\").attr(\"stroke\",function(d){return d.fillcolor;}).attr(\"stroke-width\",function(d){return d.strokewidth;}).attr(\"stroke-opacity\",function(d){return d.strokeopacity;}).attr(\"stroke-dasharray\",function(d){return d.strokedash;}).attr(\"class\",\"link\").attr(\"d\",function(d){return d3.line().x(function(d){return xScale(d.x)||0;}).y(function(d){return yScale(d.y)||0;})(d.data);});}function draw_nodes(node_container,nodes,xScale,yScale){var elem=node_container.selectAll(\".node\").data(nodes).enter().append(\"g\").attr(\"transform\",function(d){return\"translate(\"+xScale(d.x)+\",\"+yScale(d.y)+\")\";}).attr(\"class\",\"node\");var tooltip=d3.select(\"body\").append(\"div\").style(\"opacity\",0).attr(\"class\",\"idendro-tooltip\").on(\"mouseover\",function(e,d){if(e.target){d3.select(this).style(\"opacity\",1);}}).on(\"mouseleave\",function(e,d){if(e.target){d3.select(this).style(\"opacity\",0);d3.select(this).style(\"display\",\"none\");}});var mouseover=function mouseover(e,d){tooltip.style(\"opacity\",1);tooltip.style(\"display\",\"initial\");if(typeof d.hovertext==='string'){tooltip.html(d.hovertext);}else{var hovertext=\"\";for(var _i=0,_Object$entries=Object.entries(d.hovertext);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];hovertext+=\"<strong>\"+key+\"</strong>: \"+value+\"<br>\";}tooltip.html(hovertext);}if(this.nodeName==='circle'){d3.select(this).attr(\"r\",d.radius*1.5);}};var mousemove=function mousemove(e,d){tooltip.style(\"left\",e.x+\"px\").style(\"top\",e.y+\"px\");if(this.nodeName==='circle'){d3.select(this).attr(\"r\",d.radius*1.5);}};var mouseleave=function mouseleave(e,d){tooltip.style(\"opacity\",0);if(this.nodeName==='circle'){d3.select(this).attr(\"r\",d.radius);}};var click=function click(e,d){Streamlit.setComponentValue(d);};elem.append(\"circle\").attr(\"fill\",function(d){return d.fillcolor;}).attr(\"stroke\",function(d){return d.edgecolor;}).attr('r',function(d){return d.radius;}).attr(\"opacity\",function(d){return d.opacity;}).on(\"mouseover\",mouseover).on(\"mouseleave\",mouseleave).on(\"mousemove\",mousemove).on(\"click\",click);elem.append(\"text\").text(function(d){return d.label;}).attr(\"fill\",function(d){return d.labelcolor;}).attr(\"font-size\",function(d){return d.labelsize;}).attr(\"opacity\",function(d){return d.opacity;}).on(\"mouseover\",mouseover).on(\"mouseleave\",mouseleave).on(\"mousemove\",mousemove).on(\"click\",click);}/**\n * The component's render function. This will be called immediately after\n * the component is initially loaded, and then again every time the\n * component gets new data from Python.\n */function onRender(event){// Get the RenderData from the event\nvar data=event.detail;//initialize variables as appropriate\nvar dendrogram=data.args['dendrogram'];var scaleType=data.args['scale'];var show_nodes=data.args['show_nodes'];var margin={top:50,right:50,bottom:50,left:50};var label_margin_size=200;var dimensions={height:data.args['height'],width:data.args['width'],margin:margin,innerHeight:0,innerWidth:0,orientation:data.args['orientation']};var margin_map={'top':Orientation.bottom,'bottom':Orientation.top,'left':Orientation.right,'right':Orientation.left};var label_margin=margin_map[dimensions.orientation];dimensions.margin[label_margin]=label_margin_size;dimensions.innerHeight=dimensions.height-dimensions.margin.top-dimensions.margin.bottom;dimensions.innerWidth=dimensions.width-dimensions.margin.left-dimensions.margin.right;//create the plot container and the axes\nvar plot=create_container(dimensions);var scales=create_axis(plot,dimensions,dendrogram,scaleType);var xScale;var yScale;//depending on the orientation, remap X and Y values\nif(dimensions.orientation===Orientation.top||dimensions.orientation===Orientation.bottom){xScale=scales[0];yScale=scales[1];dendrogram.links.forEach(function(link){link.data=link.x.map(function(x,i){return{'x':x,'y':link.y[i]};});});}else{yScale=scales[0];xScale=scales[1];dendrogram.links.forEach(function(link){link.data=link.x.map(function(x,i){return{'y':x,'x':link.y[i]};});});dendrogram.nodes.forEach(function(node){var x=node.x;node.x=node.y;node.y=x;});}//draw links\nvar link_container=plot.append('g').attr(\"class\",\"link-container\");draw_links(link_container,dendrogram.links,xScale,yScale);//draw nodes\nif(show_nodes){var node_container=plot.append('g').attr(\"class\",\"node-container\");draw_nodes(node_container,dendrogram.nodes,xScale,yScale);}Streamlit.setFrameHeight();}// Attach our `onRender` handler to Streamlit's render event.\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT,onRender);// Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\nStreamlit.setComponentReady();// Finally, tell Streamlit to update our initial height. We omit the\n// `height` parameter here to have it default to our scrollHeight.\nStreamlit.setFrameHeight();","map":{"version":3,"names":["Streamlit","d3","Orientation","create_container","dimensions","select","remove","svg","append","attr","width","height","plot","margin","left","top","create_axis","dendrogram","scale_type","label_limits","x_domain","value_limits","y_domain","label_range","value_range","label_axis_func","value_axis_func","label_axis_transform","value_axis_transform","orientation","bottom","innerWidth","axisLeft","innerHeight","axisBottom","axisTop","axisRight","label_axis_pos","axis_labels","map","x","label_axis_label","label","labelScale","scaleLinear","domain","range","labelAxisGenerator","tickValues","tickFormat","d","i","tickSize","label_axis","call","labelAngle","anchor","sign","selectAll","Math","abs","style","valueScale","scaleSymlog","constant","scaleLog","valueAxisGenerator","draw_links","link_container","links","xScale","yScale","data","enter","fillcolor","strokewidth","strokeopacity","strokedash","line","y","draw_nodes","node_container","nodes","elem","tooltip","on","e","target","mouseover","hovertext","html","Object","entries","key","value","nodeName","radius","mousemove","mouseleave","click","setComponentValue","edgecolor","opacity","text","labelcolor","labelsize","onRender","event","detail","args","scaleType","show_nodes","right","label_margin_size","margin_map","label_margin","scales","forEach","link","node","setFrameHeight","events","addEventListener","RENDER_EVENT","setComponentReady"],"sources":["/home/aurimas/coding/idendro/frontend/src/index.tsx"],"sourcesContent":["import { Streamlit, RenderData } from \"streamlit-component-lib\"\nimport * as d3 from 'd3'\nimport './idendro.css'\n\ninterface AxisLabel {\n    x: number\n    label: string    \n    labelAngle: number\n}\n\ninterface Coord {\n    x: number\n    y: number\n}\n\ninterface ClusterLink {\n    x: number[]\n    y: number[]\n    fillcolor: string\n    id: number\n    children_id: number[]\n    cluster_id: number\n    strokewidth: number\n    strokedash: number[]\n    strokeopacity: number    \n    data: Coord[]\n}\n\ninterface ClusterNode {\n    x: number\n    y: number\n    type: string\n    id: number\n    cluster_id: number | null\n    edgecolor: string\n    label: string\n    hovertext: Object\n    fillcolor: string\n    radius: number\n    opacity: number\n    labelsize: number\n    labelcolor: string\n}\n\ninterface Dendrogram {\n    axis_labels: AxisLabel[]\n    links: ClusterLink[]\n    nodes: ClusterNode[]\n    x_domain: [number, number]\n    y_domain: [number, number]\n}\n\ninterface Dimensions {\n    margin: Margin\n    height: number\n    width: number\n    innerHeight: number\n    innerWidth: number,\n    orientation: Orientation\n}\n\nenum Orientation {\n    top = \"top\",\n    bottom = \"bottom\",\n    right = \"right\",\n    left = \"left\"\n}\n\ninterface Margin {\n    top: number\n    right: number\n    bottom: number\n    left: number\n}\n\ninterface plot extends d3.Selection<SVGGElement, unknown, HTMLElement, any> { }\n\ninterface scaleLinear extends d3.ScaleLinear<number, number, never> { }\n\ninterface scaleSymLog extends d3.ScaleSymLog<number, number, number | undefined> { }\n\ninterface scaleLog extends d3.ScaleLogarithmic<number, number, never> {}\n\nfunction create_container(dimensions: Dimensions): plot {\n\n\n    if (d3.select(\"#idendro\")) {\n        d3.select(\"#idendro\").remove()\n    }\n    // append svg element to the body of the page\n    // set dimensions and position of the svg element\n    let svg = d3\n        .select(\"body\")\n        .append(\"svg\")\n        .attr(\"id\", \"idendro\")\n        .attr(\"width\", dimensions.width)\n        .attr(\"height\", dimensions.height)\n\n    let plot = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + dimensions.margin.top + \")\")\n        .attr(\"id\", \"idendro-container\");\n\n    return plot\n}\n\nfunction create_axis(plot: plot, dimensions: Dimensions, dendrogram: Dendrogram, scale_type: string) {\n\n    let label_limits = dendrogram.x_domain\n    let value_limits = dendrogram.y_domain\n\n    let label_range, value_range = [0, 0]\n    let label_axis_func, value_axis_func: CallableFunction\n    let label_axis_transform = [0, 0]\n    let value_axis_transform = [0, 0]\n\n    //handle orientation impact on scale ranges & positioning\n    if (dimensions.orientation === Orientation.top || dimensions.orientation === Orientation.bottom) {\n        label_range = [0, dimensions.innerWidth]\n        value_axis_func = d3.axisLeft\n        value_axis_transform = [0, 0]\n        if (dimensions.orientation === Orientation.top) {\n            value_range = [dimensions.innerHeight, 0]\n            label_axis_func = d3.axisBottom\n            label_axis_transform = [0, dimensions.innerHeight]\n        } else {\n            value_range = [0, dimensions.innerHeight]\n            label_axis_func = d3.axisTop\n        }\n    } else {\n        value_axis_func = d3.axisBottom\n        label_range = [dimensions.innerHeight, 0]\n        value_axis_transform = [0, dimensions.innerHeight]\n        if (dimensions.orientation === Orientation.left) {\n            value_range = [dimensions.innerWidth, 0]\n            label_axis_func = d3.axisRight\n            label_axis_transform = [dimensions.innerWidth, 0]\n        } else {\n            value_range = [0, dimensions.innerWidth]\n            label_axis_func = d3.axisLeft\n        }\n    }\n\n    //get label-axis positions and labels\n    let label_axis_pos = dendrogram.axis_labels.map((x) => x.x)\n    let label_axis_label = dendrogram.axis_labels.map((x) => x.label)\n\n    //create label-axis\n    let labelScale: scaleLinear | scaleLog | scaleSymLog\n    labelScale = d3.scaleLinear()\n        .domain(label_limits).range(label_range)\n\n    let labelAxisGenerator = label_axis_func(labelScale)\n        .tickValues(label_axis_pos)\n        .tickFormat((d, i) => label_axis_label[i])\n        .tickSize(3)      \n        \n    let label_axis  = plot.append(\"g\")\n    .attr(\"id\", \"label-axis\")\n    .attr(\"transform\", \"translate(\" + label_axis_transform[0] + \",\" + label_axis_transform[1] + \")\")        \n    .call(labelAxisGenerator)\n\n    //handle label position angles\n    let labelAngle = dendrogram.axis_labels[0].labelAngle\n    let anchor = 'start'\n    let sign = 1\n    if (labelAngle < 0) {\n        anchor = 'end'\n        sign = -1\n    }\n    \n    label_axis.selectAll(\"text\")\n        .attr(\"transform\", \"rotate(\" + labelAngle + \")\")\n        .attr(\"y\", Math.abs(sign * 90 - labelAngle) / 7)\n        .attr(\"x\", labelAngle / 5)\n        .attr(\"dy\", \".5em\")\n        .style(\"text-anchor\", anchor);\n\n    //create value-axis\n    let valueScale: scaleLinear | scaleLog | scaleSymLog\n\n    if (scale_type === 'symlog') {\n        valueScale = d3.scaleSymlog().constant(1)\n    } else if (scale_type === 'log') {\n        valueScale = d3.scaleLog()\n    } else {\n        valueScale = d3.scaleLinear()\n    }\n\n    valueScale.domain(value_limits)\n    valueScale.range(value_range)\n\n\n    let valueAxisGenerator = value_axis_func(valueScale)\n\n    plot.append(\"g\")\n        .attr(\"id\", \"value-axis\")\n        .attr(\"transform\", \"translate(\" + value_axis_transform[0] + \",\" + value_axis_transform[1] + \")\")\n        .call(valueAxisGenerator)\n\n\n    return [labelScale, valueScale]\n}\n\nfunction draw_links(link_container: plot, links: ClusterLink[], xScale: scaleLinear | scaleLog | scaleSymLog, yScale: scaleLinear | scaleLog | scaleSymLog) {\n\n    link_container.selectAll(\".link\")\n        .data(links)\n        .enter()\n        .append(\"path\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", (d) => d.fillcolor) \n        .attr(\"stroke-width\", (d) => d.strokewidth)  \n        .attr(\"stroke-opacity\", (d) => d.strokeopacity)\n        .attr(\"stroke-dasharray\", (d) => d.strokedash)     \n        .attr(\"class\", \"link\")\n        .attr(\"d\", function (d) {\n            return d3.line<Coord>()\n                .x((d) => xScale(d.x) || 0)\n                .y((d) => yScale(d.y) || 0)\n                (d.data)\n        })\n\n}\n\nfunction draw_nodes(node_container: plot, nodes: ClusterNode[], xScale: scaleLinear | scaleLog | scaleSymLog, yScale: scaleLinear | scaleLog | scaleSymLog) {\n\n    let elem = node_container.selectAll(\".node\")\n        .data(nodes)\n        .enter()\n        .append(\"g\")\n        .attr(\"transform\", function (d) { return \"translate(\" + xScale(d.x) + \",\" + yScale(d.y) + \")\" })\n        .attr(\"class\", \"node\")\n\n    let tooltip = d3.select(\"body\")\n        .append(\"div\")\n        .style(\"opacity\", 0)\n        .attr(\"class\", \"idendro-tooltip\")        \n    .on(\"mouseover\", function(this: HTMLElement, e: MouseEvent, d) {        \n        if (e.target) { \n            d3.select(this).style(\"opacity\", 1) \n        }            \n    })\n    .on(\"mouseleave\", function(this: HTMLElement, e: MouseEvent, d) {\n        if (e.target) { \n            d3.select(this).style(\"opacity\", 0) \n            d3.select(this).style(\"display\", \"none\") \n        }\n    })\n\n    let mouseover = function (this: SVGCircleElement | SVGTextElement, e: MouseEvent, d: ClusterNode) {\n        tooltip.style(\"opacity\", 1)\n        tooltip.style(\"display\", \"initial\")\n\n        if (typeof(d.hovertext) === 'string') {\n            tooltip.html(d.hovertext)\n        } else {\n            let hovertext: string = \"\"\n            for (const [key, value] of Object.entries(d.hovertext)) {\n                hovertext += \"<strong>\"+ key + \"</strong>: \" + value + \"<br>\"\n            }\n            tooltip.html(hovertext)                        \n        }\n        \n        if (this.nodeName === 'circle') {\n            d3.select(this).attr(\"r\", d.radius * 1.5)\n        }\n    }\n\n    let mousemove = function (this: SVGCircleElement | SVGTextElement, e: MouseEvent, d: ClusterNode) {\n        tooltip            \n            .style(\"left\", e.x + \"px\")\n            .style(\"top\", e.y + \"px\")\n        if (this.nodeName === 'circle') {\n            d3.select(this).attr(\"r\", d.radius * 1.5)\n        }\n    }\n\n\n    let mouseleave = function (this: SVGCircleElement | SVGTextElement, e: MouseEvent, d: ClusterNode) {\n        tooltip\n            .style(\"opacity\", 0)\n        if (this.nodeName === 'circle') {\n            d3.select(this).attr(\"r\", d.radius)\n        }\n    }\n\n    let click = function (this: SVGCircleElement | SVGTextElement, e: MouseEvent, d: ClusterNode) {\n        Streamlit.setComponentValue(d)\n    }\n\n    elem.append(\"circle\")\n        .attr(\"fill\", (d) => d.fillcolor)\n        .attr(\"stroke\", (d) => d.edgecolor)        \n        .attr('r', (d) => d.radius)\n        .attr(\"opacity\", (d) => d.opacity)\n        .on(\"mouseover\", mouseover)\n        .on(\"mouseleave\", mouseleave)\n        .on(\"mousemove\", mousemove)\n        .on(\"click\", click)\n\n\n    elem.append(\"text\")        \n        .text((d) => d.label)\n        .attr(\"fill\", (d) => d.labelcolor)\n        .attr(\"font-size\", (d) => d.labelsize)        \n        .attr(\"opacity\", (d) => d.opacity)\n        .on(\"mouseover\", mouseover)\n        .on(\"mouseleave\", mouseleave)\n        .on(\"mousemove\", mousemove)\n        .on(\"click\", click)\n}\n\n/**\n * The component's render function. This will be called immediately after\n * the component is initially loaded, and then again every time the\n * component gets new data from Python.\n */\nfunction onRender(event: Event): void {\n    // Get the RenderData from the event\n    const data = (event as CustomEvent<RenderData>).detail\n\n    //initialize variables as appropriate\n    let dendrogram: Dendrogram = data.args['dendrogram']\n    let scaleType: string = data.args['scale']\n    let show_nodes: Boolean = data.args['show_nodes']    \n    let margin: Margin = { top: 50, right: 50, bottom: 50, left: 50 }\n    let label_margin_size = 200\n    let dimensions: Dimensions = {\n        height: data.args['height'],\n        width: data.args['width'],\n        margin: margin,\n        innerHeight: 0,\n        innerWidth: 0,\n        orientation: data.args['orientation']\n    }\n\n    let margin_map = { 'top': Orientation.bottom, 'bottom': Orientation.top, 'left': Orientation.right, 'right': Orientation.left }\n    let label_margin: Orientation = margin_map[dimensions.orientation]\n\n    dimensions.margin[label_margin] = label_margin_size\n    dimensions.innerHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom\n    dimensions.innerWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right\n\n    //create the plot container and the axes\n    let plot = create_container(dimensions)\n    let scales = create_axis(plot, dimensions, dendrogram, scaleType)\n\n    let xScale: scaleLinear | scaleLog | scaleSymLog\n    let yScale: scaleLinear | scaleLog | scaleSymLog\n\n    //depending on the orientation, remap X and Y values\n    if (dimensions.orientation === Orientation.top || dimensions.orientation === Orientation.bottom) {\n        xScale = scales[0]\n        yScale = scales[1]\n        dendrogram.links.forEach(link => {\n            link.data = link.x.map(function (x, i) { return { 'x': x, 'y': link.y[i] } })\n        });\n    } else {\n        yScale = scales[0]\n        xScale = scales[1]\n        dendrogram.links.forEach(link => {\n            link.data = link.x.map(function (x, i) { return { 'y': x, 'x': link.y[i] } })\n        });\n        dendrogram.nodes.forEach(node => {\n            let x = node.x\n            node.x = node.y\n            node.y = x\n        });\n    }\n\n    //draw links\n    let link_container = plot.append('g').attr(\"class\", \"link-container\")\n    draw_links(link_container, dendrogram.links, xScale, yScale)\n\n    //draw nodes\n    if (show_nodes) {\n        let node_container = plot.append('g').attr(\"class\", \"node-container\")\n        draw_nodes(node_container, dendrogram.nodes, xScale, yScale)\n    }\n    \n    \n    Streamlit.setFrameHeight()\n}\n\n// Attach our `onRender` handler to Streamlit's render event.\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender)\n\n// Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\nStreamlit.setComponentReady()\n\n// Finally, tell Streamlit to update our initial height. We omit the\n// `height` parameter here to have it default to our scrollHeight.\nStreamlit.setFrameHeight()\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}