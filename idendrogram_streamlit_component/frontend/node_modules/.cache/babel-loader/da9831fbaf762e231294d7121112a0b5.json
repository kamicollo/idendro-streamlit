{"ast":null,"code":"import _classCallCheck from \"/home/aurimas/coding/idendro-streamlit/idendrogram_streamlit_component/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aurimas/coding/idendro-streamlit/idendrogram_streamlit_component/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/aurimas/coding/idendro-streamlit/idendrogram_streamlit_component/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/aurimas/coding/idendro-streamlit/idendrogram_streamlit_component/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aurimas/coding/idendro-streamlit/idendrogram_streamlit_component/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/aurimas/coding/idendro-streamlit/idendrogram_streamlit_component/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema';\nimport { Map_ } from '../type';\nimport { VariableWidthBuilder } from '../builder';\n/** @ignore */\n\nexport var MapBuilder = /*#__PURE__*/function (_VariableWidthBuilder) {\n  _inherits(MapBuilder, _VariableWidthBuilder);\n\n  var _super = _createSuper(MapBuilder);\n\n  function MapBuilder() {\n    _classCallCheck(this, MapBuilder);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MapBuilder, [{\n    key: \"set\",\n    value: function set(index, value) {\n      return _get(_getPrototypeOf(MapBuilder.prototype), \"set\", this).call(this, index, value);\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(index, value) {\n      value = value instanceof Map ? value : new Map(Object.entries(value));\n      var pending = this._pending || (this._pending = new Map());\n      var current = pending.get(index);\n      current && (this._pendingLength -= current.size);\n      this._pendingLength += value.size;\n      pending.set(index, value);\n    }\n  }, {\n    key: \"addChild\",\n    value: function addChild(child) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\".concat(this.numChildren);\n\n      if (this.numChildren > 0) {\n        throw new Error('ListBuilder can only have one child.');\n      }\n\n      this.children[this.numChildren] = child;\n      this.type = new Map_(new Field(name, child.type, true), this.type.keysSorted);\n      return this.numChildren - 1;\n    }\n  }, {\n    key: \"_flushPending\",\n    value: function _flushPending(pending) {\n      var _this = this;\n\n      var offsets = this._offsets;\n      var setValue = this._setValue;\n      pending.forEach(function (value, index) {\n        if (value === undefined) {\n          offsets.set(index, 0);\n        } else {\n          offsets.set(index, value.size);\n          setValue(_this, index, value);\n        }\n      });\n    }\n  }]);\n\n  return MapBuilder;\n}(VariableWidthBuilder);","map":{"version":3,"sources":["builder/map.ts"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAS,KAAT,QAAsB,WAAtB;AACA,SAAmB,IAAnB,QAAuC,SAAvC;AACA,SAAkB,oBAAlB,QAA8C,YAA9C;AAMA;;AACA,WAAa,UAAb;EAAA;;EAAA;;EAAA;IAAA;;IAAA;EAAA;;EAAA;IAAA;IAAA,OAGW,aAAI,KAAJ,EAAmB,KAAnB,EAAmD;MACtD,2EAAiB,KAAjB,EAAwB,KAAxB;IACH;EALL;IAAA;IAAA,OAOW,kBAAS,KAAT,EAAwB,KAAxB,EAAgD;MACnD,KAAK,GAAG,KAAK,YAAY,GAAjB,GAAuB,KAAvB,GAA+B,IAAI,GAAJ,CAAQ,MAAM,CAAC,OAAP,CAAe,KAAf,CAAR,CAAvC;MACA,IAAM,OAAO,GAAG,KAAK,QAAL,KAAkB,KAAK,QAAL,GAAgB,IAAI,GAAJ,EAAlC,CAAhB;MACA,IAAM,OAAO,GAAG,OAAO,CAAC,GAAR,CAAY,KAAZ,CAAhB;MACA,OAAO,KAAK,KAAK,cAAL,IAAuB,OAAO,CAAC,IAApC,CAAP;MACA,KAAK,cAAL,IAAuB,KAAK,CAAC,IAA7B;MACA,OAAO,CAAC,GAAR,CAAY,KAAZ,EAAmB,KAAnB;IACH;EAdL;IAAA;IAAA,OAgBW,kBAAS,KAAT,EAAmF;MAAA,IAA5B,IAA4B,iFAAlB,KAAK,WAAa;;MACtF,IAAI,KAAK,WAAL,GAAmB,CAAvB,EAA0B;QACtB,MAAM,IAAI,KAAJ,CAAU,sCAAV,CAAN;MACH;;MACD,KAAK,QAAL,CAAc,KAAK,WAAnB,IAAkC,KAAlC;MACA,KAAK,IAAL,GAAY,IAAI,IAAJ,CAAe,IAAI,KAAJ,CAAU,IAAV,EAAgB,KAAK,CAAC,IAAtB,EAA4B,IAA5B,CAAf,EAAkD,KAAK,IAAL,CAAU,UAA5D,CAAZ;MACA,OAAO,KAAK,WAAL,GAAmB,CAA1B;IACH;EAvBL;IAAA;IAAA,OAyBc,uBAAc,OAAd,EAAsC;MAAA;;MAC5C,IAAM,OAAO,GAAG,KAAK,QAArB;MACA,IAAM,QAAQ,GAAG,KAAK,SAAtB;MACA,OAAO,CAAC,OAAR,CAAgB,UAAC,KAAD,EAAQ,KAAR,EAAiB;QAC7B,IAAI,KAAK,KAAK,SAAd,EAAyB;UACrB,OAAO,CAAC,GAAR,CAAY,KAAZ,EAAmB,CAAnB;QACH,CAFD,MAEO;UACH,OAAO,CAAC,GAAR,CAAY,KAAZ,EAAmB,KAAK,CAAC,IAAzB;UACA,QAAQ,CAAC,KAAD,EAAO,KAAP,EAAc,KAAd,CAAR;QACH;MACJ,CAPD;IAQH;EApCL;;EAAA;AAAA,EAAiG,oBAAjG","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataType, Map_, Struct } from '../type';\nimport { Builder, VariableWidthBuilder } from '../builder';\n\n/** @ignore */ type MapValue<K extends DataType = any, V extends DataType = any> = Map_<K, V>['TValue'];\n/** @ignore */ type MapValues<K extends DataType = any, V extends DataType = any> = Map<number, MapValue<K, V> | undefined>;\n/** @ignore */ type MapValueExt<K extends DataType = any, V extends DataType = any> = MapValue<K, V> | { [key: string]: V } | { [key: number]: V } ;\n\n/** @ignore */\nexport class MapBuilder<K extends DataType = any, V extends DataType = any, TNull = any> extends VariableWidthBuilder<Map_<K, V>, TNull> {\n\n    protected _pending: MapValues<K, V> | undefined;\n    public set(index: number, value: MapValueExt<K, V> | TNull) {\n        return super.set(index, value as MapValue<K, V> | TNull);\n    }\n\n    public setValue(index: number, value: MapValueExt<K, V>) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map() as MapValues<K, V>);\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n\n    public addChild(child: Builder<Struct<{ key: K, value: V }>>, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_<K, V>(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n\n    protected _flushPending(pending: MapValues<K, V>) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}