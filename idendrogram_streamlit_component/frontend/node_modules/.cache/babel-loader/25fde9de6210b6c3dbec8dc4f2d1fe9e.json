{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { valueToString } from '../util/pretty';\n/** @ignore */\n\nconst kParent = Symbol.for('parent');\n/** @ignore */\n\nconst kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\n\nconst kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */\n\nconst kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */\n\nconst kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nclass Row {\n  constructor(parent, numKeys) {\n    this[kParent] = parent;\n    this.size = numKeys;\n  }\n\n  entries() {\n    return this[Symbol.iterator]();\n  }\n\n  has(key) {\n    return this.get(key) !== undefined;\n  }\n\n  get(key) {\n    let val = undefined;\n\n    if (key !== null && key !== undefined) {\n      const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n      let idx = ktoi.get(key);\n\n      if (idx !== undefined) {\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        (val = itov[idx]) !== undefined || (itov[idx] = val = this.getValue(idx));\n      } else if ((idx = this.getIndex(key)) > -1) {\n        ktoi.set(key, idx);\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        (val = itov[idx]) !== undefined || (itov[idx] = val = this.getValue(idx));\n      }\n    }\n\n    return val;\n  }\n\n  set(key, val) {\n    if (key !== null && key !== undefined) {\n      const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n      let idx = ktoi.get(key);\n\n      if (idx === undefined) {\n        ktoi.set(key, idx = this.getIndex(key));\n      }\n\n      if (idx > -1) {\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        itov[idx] = this.setValue(idx, val);\n      }\n    }\n\n    return this;\n  }\n\n  clear() {\n    throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`);\n  }\n\n  delete(_) {\n    throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`);\n  }\n\n  *[Symbol.iterator]() {\n    const ki = this.keys();\n    const vi = this.values();\n    const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n    const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n    for (let k, v, i = 0, kr, vr; !((kr = ki.next()).done || (vr = vi.next()).done); ++i) {\n      k = kr.value;\n      v = vr.value;\n      itov[i] = v;\n      ktoi.has(k) || ktoi.set(k, i);\n      yield [k, v];\n    }\n  }\n\n  forEach(callbackfn, thisArg) {\n    const ki = this.keys();\n    const vi = this.values();\n    const callback = thisArg === undefined ? callbackfn : (v, k, m) => callbackfn.call(thisArg, v, k, m);\n    const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n    const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n    for (let k, v, i = 0, kr, vr; !((kr = ki.next()).done || (vr = vi.next()).done); ++i) {\n      k = kr.value;\n      v = vr.value;\n      itov[i] = v;\n      ktoi.has(k) || ktoi.set(k, i);\n      callback(v, k, this);\n    }\n  }\n\n  toArray() {\n    return [...this.values()];\n  }\n\n  toJSON() {\n    const obj = {};\n    this.forEach((val, key) => obj[key] = val);\n    return obj;\n  }\n\n  inspect() {\n    return this.toString();\n  }\n\n  [kCustomInspect]() {\n    return this.toString();\n  }\n\n  toString() {\n    const str = [];\n    this.forEach((val, key) => {\n      key = valueToString(key);\n      val = valueToString(val);\n      str.push(`${key}: ${val}`);\n    });\n    return `{ ${str.join(', ')} }`;\n  }\n\n}\n\nRow[Symbol.toStringTag] = (proto => {\n  Object.defineProperties(proto, {\n    'size': {\n      writable: true,\n      enumerable: false,\n      configurable: false,\n      value: 0\n    },\n    [kParent]: {\n      writable: true,\n      enumerable: false,\n      configurable: false,\n      value: null\n    },\n    [kRowIndex]: {\n      writable: true,\n      enumerable: false,\n      configurable: false,\n      value: -1\n    }\n  });\n  return proto[Symbol.toStringTag] = 'Row';\n})(Row.prototype);\n\nexport class MapRow extends Row {\n  constructor(slice) {\n    super(slice, slice.length);\n    return createRowProxy(this);\n  }\n\n  keys() {\n    return this[kParent].getChildAt(0)[Symbol.iterator]();\n  }\n\n  values() {\n    return this[kParent].getChildAt(1)[Symbol.iterator]();\n  }\n\n  getKey(idx) {\n    return this[kParent].getChildAt(0).get(idx);\n  }\n\n  getIndex(key) {\n    return this[kParent].getChildAt(0).indexOf(key);\n  }\n\n  getValue(index) {\n    return this[kParent].getChildAt(1).get(index);\n  }\n\n  setValue(index, value) {\n    this[kParent].getChildAt(1).set(index, value);\n  }\n\n}\nexport class StructRow extends Row {\n  constructor(parent) {\n    super(parent, parent.type.children.length);\n    return defineRowProxyProperties(this);\n  }\n\n  *keys() {\n    for (const field of this[kParent].type.children) {\n      yield field.name;\n    }\n  }\n\n  *values() {\n    for (const field of this[kParent].type.children) {\n      yield this[field.name];\n    }\n  }\n\n  getKey(idx) {\n    return this[kParent].type.children[idx].name;\n  }\n\n  getIndex(key) {\n    return this[kParent].type.children.findIndex(f => f.name === key);\n  }\n\n  getValue(index) {\n    return this[kParent].getChildAt(index).get(this[kRowIndex]);\n  }\n\n  setValue(index, value) {\n    return this[kParent].getChildAt(index).set(this[kRowIndex], value);\n  }\n\n}\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n/** @ignore */\n\nconst defineRowProxyProperties = (() => {\n  const desc = {\n    enumerable: true,\n    configurable: false,\n    get: null,\n    set: null\n  };\n  return row => {\n    let idx = -1,\n        ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n\n    const getter = key => function () {\n      return this.get(key);\n    };\n\n    const setter = key => function (val) {\n      return this.set(key, val);\n    };\n\n    for (const key of row.keys()) {\n      ktoi.set(key, ++idx);\n      desc.get = getter(key);\n      desc.set = setter(key);\n      row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n      row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n    }\n\n    desc.get = desc.set = null;\n    return row;\n  };\n})();\n/** @ignore */\n\n\nconst createRowProxy = (() => {\n  if (typeof Proxy === 'undefined') {\n    return defineRowProxyProperties;\n  }\n\n  const has = Row.prototype.has;\n  const get = Row.prototype.get;\n  const set = Row.prototype.set;\n  const getKey = Row.prototype.getKey;\n  const RowProxyHandler = {\n    isExtensible() {\n      return false;\n    },\n\n    deleteProperty() {\n      return false;\n    },\n\n    preventExtensions() {\n      return true;\n    },\n\n    ownKeys(row) {\n      return [...row.keys()].map(x => `${x}`);\n    },\n\n    has(row, key) {\n      switch (key) {\n        case 'getKey':\n        case 'getIndex':\n        case 'getValue':\n        case 'setValue':\n        case 'toArray':\n        case 'toJSON':\n        case 'inspect':\n        case 'constructor':\n        case 'isPrototypeOf':\n        case 'propertyIsEnumerable':\n        case 'toString':\n        case 'toLocaleString':\n        case 'valueOf':\n        case 'size':\n        case 'has':\n        case 'get':\n        case 'set':\n        case 'clear':\n        case 'delete':\n        case 'keys':\n        case 'values':\n        case 'entries':\n        case 'forEach':\n        case '__proto__':\n        case '__defineGetter__':\n        case '__defineSetter__':\n        case 'hasOwnProperty':\n        case '__lookupGetter__':\n        case '__lookupSetter__':\n        case Symbol.iterator:\n        case Symbol.toStringTag:\n        case kParent:\n        case kRowIndex:\n        case kIdxToVal:\n        case kKeyToIdx:\n        case kCustomInspect:\n          return true;\n      }\n\n      if (typeof key === 'number' && !row.has(key)) {\n        key = row.getKey(key);\n      }\n\n      return row.has(key);\n    },\n\n    get(row, key, receiver) {\n      switch (key) {\n        case 'getKey':\n        case 'getIndex':\n        case 'getValue':\n        case 'setValue':\n        case 'toArray':\n        case 'toJSON':\n        case 'inspect':\n        case 'constructor':\n        case 'isPrototypeOf':\n        case 'propertyIsEnumerable':\n        case 'toString':\n        case 'toLocaleString':\n        case 'valueOf':\n        case 'size':\n        case 'has':\n        case 'get':\n        case 'set':\n        case 'clear':\n        case 'delete':\n        case 'keys':\n        case 'values':\n        case 'entries':\n        case 'forEach':\n        case '__proto__':\n        case '__defineGetter__':\n        case '__defineSetter__':\n        case 'hasOwnProperty':\n        case '__lookupGetter__':\n        case '__lookupSetter__':\n        case Symbol.iterator:\n        case Symbol.toStringTag:\n        case kParent:\n        case kRowIndex:\n        case kIdxToVal:\n        case kKeyToIdx:\n        case kCustomInspect:\n          return Reflect.get(row, key, receiver);\n      }\n\n      if (typeof key === 'number' && !has.call(receiver, key)) {\n        key = getKey.call(receiver, key);\n      }\n\n      return get.call(receiver, key);\n    },\n\n    set(row, key, val, receiver) {\n      switch (key) {\n        case kParent:\n        case kRowIndex:\n        case kIdxToVal:\n        case kKeyToIdx:\n          return Reflect.set(row, key, val, receiver);\n\n        case 'getKey':\n        case 'getIndex':\n        case 'getValue':\n        case 'setValue':\n        case 'toArray':\n        case 'toJSON':\n        case 'inspect':\n        case 'constructor':\n        case 'isPrototypeOf':\n        case 'propertyIsEnumerable':\n        case 'toString':\n        case 'toLocaleString':\n        case 'valueOf':\n        case 'size':\n        case 'has':\n        case 'get':\n        case 'set':\n        case 'clear':\n        case 'delete':\n        case 'keys':\n        case 'values':\n        case 'entries':\n        case 'forEach':\n        case '__proto__':\n        case '__defineGetter__':\n        case '__defineSetter__':\n        case 'hasOwnProperty':\n        case '__lookupGetter__':\n        case '__lookupSetter__':\n        case Symbol.iterator:\n        case Symbol.toStringTag:\n          return false;\n      }\n\n      if (typeof key === 'number' && !has.call(receiver, key)) {\n        key = getKey.call(receiver, key);\n      }\n\n      return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n    }\n\n  };\n  return row => new Proxy(row, RowProxyHandler);\n})();","map":{"version":3,"sources":["vector/row.ts"],"names":[],"mappings":"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","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { StructVector } from './struct';\nimport { valueToString } from '../util/pretty';\nimport { DataType, Struct, RowLike } from '../type';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nabstract class Row<K extends PropertyKey = any, V = any> implements Map<K, V> {\n\n    public readonly size: number;\n    public readonly [Symbol.toStringTag]: string;\n\n    protected [kRowIndex]: number;\n    protected [kParent]: Vector<Struct>;\n    protected [kKeyToIdx]: Map<K, number>;\n    protected [kIdxToVal]: V[];\n\n    constructor(parent: Vector<Struct>, numKeys: number) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n\n    public abstract keys(): IterableIterator<K>;\n    public abstract values(): IterableIterator<V>;\n    public abstract getKey(idx: number): K;\n    public abstract getIndex(key: K): number;\n    public abstract getValue(idx: number): V;\n    public abstract setValue(idx: number, val: V): void;\n\n    public entries() { return this[Symbol.iterator](); }\n\n    public has(key: K) { return this.get(key) !== undefined; }\n\n    public get(key: K) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            } else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n\n    public set(key: K, val: V) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = <any> this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n\n    public clear(): void { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n\n    public delete(_: K): boolean { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n\n    public *[Symbol.iterator](): IterableIterator<[K, V]> {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n\n    public forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v: V, k: K, m: Map<K, V>) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n\n    public toArray() { return [...this.values()]; }\n    public toJSON() {\n        const obj = {} as any;\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n\n    public inspect() { return this.toString(); }\n    public [kCustomInspect]() { return this.toString(); }\n    public toString() {\n        const str: string[] = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: Row) => {\n        Object.defineProperties(proto, {\n            'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n            [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n            [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n        });\n        return (proto as any)[Symbol.toStringTag] = 'Row';\n    })(Row.prototype);\n}\n\nexport class MapRow<K extends DataType = any, V extends DataType = any> extends Row<K['TValue'], V['TValue'] | null> {\n    constructor(slice: Vector<Struct<{ key: K, value: V }>>) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    public keys() {\n        return this[kParent].getChildAt(0)![Symbol.iterator]();\n    }\n    public values() {\n        return this[kParent].getChildAt(1)![Symbol.iterator]();\n    }\n    public getKey(idx: number): K['TValue'] {\n        return this[kParent].getChildAt(0)!.get(idx);\n    }\n    public getIndex(key: K['TValue']): number {\n        return this[kParent].getChildAt(0)!.indexOf(key);\n    }\n    public getValue(index: number): V['TValue'] | null {\n        return this[kParent].getChildAt(1)!.get(index);\n    }\n    public setValue(index: number, value: V['TValue'] | null): void {\n        this[kParent].getChildAt(1)!.set(index, value);\n    }\n}\n\nexport class StructRow<T extends { [key: string]: DataType } = any> extends Row<keyof T, T[keyof T]['TValue'] | null> {\n    constructor(parent: StructVector<T>) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    public *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name as keyof T;\n        }\n    }\n    public *values() {\n        for (const field of this[kParent].type.children) {\n            yield (this as RowLike<T>)[field.name];\n        }\n    }\n    public getKey(idx: number): keyof T {\n        return this[kParent].type.children[idx].name as keyof T;\n    }\n    public getIndex(key: keyof T): number {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    public getValue(index: number): T[keyof T]['TValue'] | null {\n        return this[kParent].getChildAt(index)!.get(this[kRowIndex]);\n    }\n    public setValue(index: number, value: T[keyof T]['TValue'] | null): void {\n        return this[kParent].getChildAt(index)!.set(this[kRowIndex], value);\n    }\n}\n\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null as any, set: null as any };\n    return <T extends Row>(row: T) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key: any) => function(this: T) { return this.get(key); };\n        const setter = (key: any) => function(this: T, val: any) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler: ProxyHandler<Row> = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row: Row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row: Row, key: PropertyKey) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row: Row, key: PropertyKey, receiver: any) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row: Row, key: PropertyKey, val: any, receiver: any) {\n            switch (key) {\n                case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return <T extends Row>(row: T) => new Proxy(row, RowProxyHandler) as T;\n})();\n"]},"metadata":{},"sourceType":"module"}