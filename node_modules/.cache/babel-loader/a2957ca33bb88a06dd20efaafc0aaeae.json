{"ast":null,"code":"import { Streamlit } from \"streamlit-component-lib\";\nimport * as d3 from 'd3';\nimport * as userfuncs from './userfuncs';\nvar Orientation;\n\n(function (Orientation) {\n  Orientation[\"top\"] = \"top\";\n  Orientation[\"bottom\"] = \"bottom\";\n  Orientation[\"right\"] = \"right\";\n  Orientation[\"left\"] = \"left\";\n})(Orientation || (Orientation = {}));\n\nfunction create_container(dimensions) {\n  if (d3.select(\"#idendro\")) {\n    d3.select(\"#idendro\").remove();\n  } // append svg element to the body of the page\n  // set dimensions and position of the svg element\n\n\n  let svg = d3.select(\"body\").append(\"svg\").attr(\"id\", \"idendro\").attr(\"width\", dimensions.width).attr(\"height\", dimensions.height);\n  let plot = svg.append(\"g\").attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + dimensions.margin.top + \")\").attr(\"id\", \"idendro-container\");\n  return plot;\n}\n\nfunction create_axis(plot, dimensions, dendrogram, scale_type) {\n  let label_limits = dendrogram.x_limits;\n  let value_limits = dendrogram.y_limits;\n  let label_range,\n      value_range = [0, 0];\n  let label_axis_func, value_axis_func;\n  let label_axis_transform = [0, 0];\n  let value_axis_transform = [0, 0]; //handle orientation impact on scale ranges & positioning\n\n  if (dimensions.orientation === Orientation.top || dimensions.orientation === Orientation.bottom) {\n    label_range = [0, dimensions.innerWidth];\n    value_axis_func = d3.axisLeft;\n    value_axis_transform = [0, 0];\n\n    if (dimensions.orientation === Orientation.top) {\n      value_range = [dimensions.innerHeight, 0];\n      label_axis_func = d3.axisBottom;\n      label_axis_transform = [0, dimensions.innerHeight];\n    } else {\n      value_range = [0, dimensions.innerHeight];\n      label_axis_func = d3.axisTop;\n    }\n  } else {\n    value_axis_func = d3.axisBottom;\n    label_range = [dimensions.innerHeight, 0];\n    value_axis_transform = [0, dimensions.innerHeight];\n\n    if (dimensions.orientation === Orientation.left) {\n      value_range = [dimensions.innerWidth, 0];\n      label_axis_func = d3.axisRight;\n      label_axis_transform = [dimensions.innerWidth, 0];\n    } else {\n      value_range = [0, dimensions.innerWidth];\n      label_axis_func = d3.axisLeft;\n    }\n  } //get label-axis positions and labels\n\n\n  let label_axis_pos = dendrogram.axis_labels.map(x => x.x);\n  let label_axis_label = dendrogram.axis_labels.map(x => x.label); //create label-axis\n\n  let labelScale;\n  labelScale = d3.scaleLinear().domain(label_limits).range(label_range);\n  let labelAxisGenerator = label_axis_func(labelScale).tickValues(label_axis_pos).tickFormat((d, i) => label_axis_label[i]).tickSize(3);\n  plot.append(\"g\").attr(\"id\", \"label-axis\").attr(\"transform\", \"translate(\" + label_axis_transform[0] + \",\" + label_axis_transform[1] + \")\").call(labelAxisGenerator); //create value-axis\n\n  let valueScale;\n\n  if (scale_type === 'log') {\n    valueScale = d3.scaleSymlog().constant(1);\n  } else {\n    valueScale = d3.scaleLinear();\n  }\n\n  valueScale.domain(value_limits);\n  valueScale.range(value_range);\n  let valueAxisGenerator = value_axis_func(valueScale);\n  plot.append(\"g\").attr(\"id\", \"value-axis\").attr(\"transform\", \"translate(\" + value_axis_transform[0] + \",\" + value_axis_transform[1] + \")\").call(valueAxisGenerator);\n  return [labelScale, valueScale];\n}\n\nfunction draw_links(link_container, links, xScale, yScale) {\n  link_container.selectAll(\".link\").data(links).enter().append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", d => d.fillcolor).attr(\"stroke-width\", 1.5).attr(\"class\", \"link\").attr(\"d\", function (d) {\n    return d3.line().x(d => xScale(d.x) || 0).y(d => yScale(d.y) || 0)(d.data);\n  });\n}\n\nfunction draw_nodes(node_container, nodes, xScale, yScale) {\n  let elem = node_container.selectAll(\".node\").data(nodes).enter().append(\"g\").attr(\"transform\", function (d) {\n    return \"translate(\" + xScale(d.x) + \",\" + yScale(d.y) + \")\";\n  }).attr(\"class\", \"node\");\n  let tooltip = d3.select(\"body\").append(\"div\").style(\"opacity\", 0).attr(\"class\", \"xtooltip\").style(\"background-color\", \"red\").style(\"border\", \"solid\").style(\"border-width\", \"2px\").style(\"border-radius\", \"5px\").style(\"padding\", \"5px\").style(\"position\", \"absolute\").on(\"mouseover\", function (e, d) {\n    if (e.target) {\n      d3.select(this).style(\"opacity\", 1);\n    }\n  }).on(\"mouseleave\", function (e, d) {\n    if (e.target) {\n      d3.select(this).style(\"opacity\", 0);\n    }\n  });\n\n  let mouseover = function (e, d) {\n    tooltip.style(\"opacity\", 1);\n\n    if (typeof d.hovertext === 'string') {\n      tooltip.html(d.hovertext);\n    } else {\n      let hovertext = \"\";\n\n      for (const [key, value] of Object.entries(d.hovertext)) {\n        hovertext += \"<strong>\" + key + \"</strong>: \" + value + \"<br>\";\n      }\n\n      tooltip.html(hovertext);\n    }\n\n    if (this.nodeName === 'circle') {\n      d3.select(this).attr(\"r\", d.radius * 1.5);\n    }\n  };\n\n  let mousemove = function (e, d) {\n    tooltip.style(\"left\", e.x + \"px\").style(\"top\", e.y + \"px\");\n\n    if (this.nodeName === 'circle') {\n      d3.select(this).attr(\"r\", d.radius * 1.5);\n    }\n  };\n\n  let mouseleave = function (e, d) {\n    tooltip.style(\"opacity\", 0);\n\n    if (this.nodeName === 'circle') {\n      d3.select(this).attr(\"r\", d.radius);\n    }\n  };\n\n  elem.append(\"circle\").attr(\"fill\", d => d.fillcolor).attr(\"stroke\", d => d.edgecolor).attr(\"stroke-width\", 1.5).attr('r', d => d.radius).on(\"mouseover\", mouseover).on(\"mouseleave\", mouseleave).on(\"mousemove\", mousemove);\n  elem.append(\"text\").attr(\"dx\", d => 0).text(d => d.label).attr(\"fill\", d => d.labelcolor).attr(\"font-size\", d => d.labelsize).attr(\"alignment-baseline\", \"central\").attr(\"text-anchor\", \"middle\").attr(\"font-weight\", \"bold\").on(\"mouseover\", mouseover).on(\"mouseleave\", mouseleave).on(\"mousemove\", mousemove);\n}\n/* // Add a click handler to our button. It will send data back to Streamlit.\nlet numClicks = 0\n\nbutton.onclick = function(): void {\n  // Increment numClicks, and pass the new value back to\n  // Streamlit via `Streamlit.setComponentValue`.\n  numClicks += 1\n  Streamlit.setComponentValue(numClicks)\n} */\n\n/**\n * The component's render function. This will be called immediately after\n * the component is initially loaded, and then again every time the\n * component gets new data from Python.\n */\n\n\nfunction onRender(event) {\n  // Get the RenderData from the event\n  const data = event.detail;\n  let dendrogram = data.args['data'];\n  let scaleType = data.args['scale_type'];\n  console.log(dendrogram);\n  let margin = {\n    top: 50,\n    right: 50,\n    bottom: 50,\n    left: 50\n  };\n  let label_margin_size = data.args['label_margin'];\n  let dimensions = {\n    height: data.args['height'],\n    width: data.args['width'],\n    margin: margin,\n    innerHeight: 0,\n    innerWidth: 0,\n    orientation: data.args['orientation']\n  };\n  let margin_map = {\n    'top': Orientation.bottom,\n    'bottom': Orientation.top,\n    'left': Orientation.right,\n    'right': Orientation.left\n  };\n  let label_margin = margin_map[dimensions.orientation];\n  dimensions.margin[label_margin] = label_margin_size;\n  dimensions.innerHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom;\n  dimensions.innerWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\n  let plot = create_container(dimensions);\n  let scales = create_axis(plot, dimensions, dendrogram, scaleType);\n  let xScale;\n  let yScale;\n\n  if (dimensions.orientation === Orientation.top || dimensions.orientation === Orientation.bottom) {\n    xScale = scales[0];\n    yScale = scales[1];\n    dendrogram.links.forEach(link => {\n      link.data = link.x.map(function (x, i) {\n        return {\n          'x': x,\n          'y': link.y[i]\n        };\n      });\n    });\n  } else {\n    yScale = scales[0];\n    xScale = scales[1];\n    dendrogram.links.forEach(link => {\n      link.data = link.x.map(function (x, i) {\n        return {\n          'y': x,\n          'x': link.y[i]\n        };\n      });\n    });\n    dendrogram.nodes.forEach(node => {\n      let x = node.x;\n      node.x = node.y;\n      node.y = x;\n    });\n  }\n\n  let link_container = plot.append('g').attr(\"class\", \"link-container\");\n  let node_container = plot.append('g').attr(\"class\", \"node-container\");\n  draw_links(link_container, dendrogram.links, xScale, yScale);\n  draw_nodes(node_container, dendrogram.nodes, xScale, yScale);\n  userfuncs.postprocess(d3, dimensions, dendrogram);\n  Streamlit.setFrameHeight();\n} // Attach our `onRender` handler to Streamlit's render event.\n\n\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender); // Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\n\nStreamlit.setComponentReady(); // Finally, tell Streamlit to update our initial height. We omit the\n// `height` parameter here to have it default to our scrollHeight.\n\nStreamlit.setFrameHeight();","map":{"version":3,"names":["Streamlit","d3","userfuncs","Orientation","create_container","dimensions","select","remove","svg","append","attr","width","height","plot","margin","left","top","create_axis","dendrogram","scale_type","label_limits","x_limits","value_limits","y_limits","label_range","value_range","label_axis_func","value_axis_func","label_axis_transform","value_axis_transform","orientation","bottom","innerWidth","axisLeft","innerHeight","axisBottom","axisTop","axisRight","label_axis_pos","axis_labels","map","x","label_axis_label","label","labelScale","scaleLinear","domain","range","labelAxisGenerator","tickValues","tickFormat","d","i","tickSize","call","valueScale","scaleSymlog","constant","valueAxisGenerator","draw_links","link_container","links","xScale","yScale","selectAll","data","enter","fillcolor","line","y","draw_nodes","node_container","nodes","elem","tooltip","style","on","e","target","mouseover","hovertext","html","key","value","Object","entries","nodeName","radius","mousemove","mouseleave","edgecolor","text","labelcolor","labelsize","onRender","event","detail","args","scaleType","console","log","right","label_margin_size","margin_map","label_margin","scales","forEach","link","node","postprocess","setFrameHeight","events","addEventListener","RENDER_EVENT","setComponentReady"],"sources":["/home/aurimas/coding/idendro/frontend/src/index.tsx"],"sourcesContent":["import { Streamlit, RenderData } from \"streamlit-component-lib\"\nimport * as d3 from 'd3'\nimport * as userfuncs from './userfuncs'\n\ninterface AxisLabel {\n    x: number\n    label: string\n    labelsize: number\n}\n\ninterface Coord {\n    x: number\n    y: number\n}\n\ninterface ClusterLink {\n    x: number[]\n    y: number[]\n    fillcolor: string\n    size: number\n    data: Coord[]\n}\n\ninterface ClusterNode {\n    x: number\n    y: number\n    edgecolor: string\n    fillcolor: string\n    label: string\n    hovertext: Object | string\n    radius: number\n    labelsize: number\n    labelcolor: string\n\n}\n\ninterface Dendrogram {\n    axis_labels: AxisLabel[]\n    links: ClusterLink[]\n    nodes: ClusterNode[]\n    x_limits: [number, number]\n    y_limits: [number, number]\n}\n\ninterface Dimensions {\n    margin: Margin\n    height: number\n    width: number\n    innerHeight: number\n    innerWidth: number,\n    orientation: Orientation\n}\n\nenum Orientation {\n    top = \"top\",\n    bottom = \"bottom\",\n    right = \"right\",\n    left = \"left\"\n}\n\ninterface Margin {\n    top: number\n    right: number\n    bottom: number\n    left: number\n}\n\ninterface plot extends d3.Selection<SVGGElement, unknown, HTMLElement, any> { }\n\ninterface scaleLinear extends d3.ScaleLinear<number, number, never> { }\n\ninterface scaleLog extends d3.ScaleSymLog<number, number, number | undefined> { }\n\nfunction create_container(dimensions: Dimensions): plot {\n\n\n    if (d3.select(\"#idendro\")) {\n        d3.select(\"#idendro\").remove()\n    }\n    // append svg element to the body of the page\n    // set dimensions and position of the svg element\n    let svg = d3\n        .select(\"body\")\n        .append(\"svg\")\n        .attr(\"id\", \"idendro\")\n        .attr(\"width\", dimensions.width)\n        .attr(\"height\", dimensions.height)\n\n    let plot = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + dimensions.margin.top + \")\")\n        .attr(\"id\", \"idendro-container\");\n\n    return plot\n}\n\nfunction create_axis(plot: plot, dimensions: Dimensions, dendrogram: Dendrogram, scale_type: string) {\n\n    let label_limits = dendrogram.x_limits\n    let value_limits = dendrogram.y_limits\n\n    let label_range, value_range = [0, 0]\n    let label_axis_func, value_axis_func: CallableFunction\n    let label_axis_transform = [0, 0]\n    let value_axis_transform = [0, 0]\n\n    //handle orientation impact on scale ranges & positioning\n    if (dimensions.orientation === Orientation.top || dimensions.orientation === Orientation.bottom) {\n        label_range = [0, dimensions.innerWidth]\n        value_axis_func = d3.axisLeft\n        value_axis_transform = [0, 0]\n        if (dimensions.orientation === Orientation.top) {\n            value_range = [dimensions.innerHeight, 0]\n            label_axis_func = d3.axisBottom\n            label_axis_transform = [0, dimensions.innerHeight]\n        } else {\n            value_range = [0, dimensions.innerHeight]\n            label_axis_func = d3.axisTop\n        }\n    } else {\n        value_axis_func = d3.axisBottom\n        label_range = [dimensions.innerHeight, 0]\n        value_axis_transform = [0, dimensions.innerHeight]\n        if (dimensions.orientation === Orientation.left) {\n            value_range = [dimensions.innerWidth, 0]\n            label_axis_func = d3.axisRight\n            label_axis_transform = [dimensions.innerWidth, 0]\n        } else {\n            value_range = [0, dimensions.innerWidth]\n            label_axis_func = d3.axisLeft\n        }\n    }\n\n    //get label-axis positions and labels\n    let label_axis_pos = dendrogram.axis_labels.map((x) => x.x)\n    let label_axis_label = dendrogram.axis_labels.map((x) => x.label)\n\n    //create label-axis\n    let labelScale: scaleLinear | scaleLog\n    labelScale = d3.scaleLinear()\n        .domain(label_limits).range(label_range)\n\n    let labelAxisGenerator = label_axis_func(labelScale)\n        .tickValues(label_axis_pos)\n        .tickFormat((d, i) => label_axis_label[i])\n        .tickSize(3)\n\n    plot.append(\"g\")\n        .attr(\"id\", \"label-axis\")\n        .attr(\"transform\", \"translate(\" + label_axis_transform[0] + \",\" + label_axis_transform[1] + \")\")\n        .call(labelAxisGenerator)\n\n    //create value-axis\n    let valueScale: scaleLinear | scaleLog\n\n    if (scale_type === 'log') {\n        valueScale = d3.scaleSymlog().constant(1)\n    } else {\n        valueScale = d3.scaleLinear()\n    }\n\n    valueScale.domain(value_limits)\n    valueScale.range(value_range)\n\n\n    let valueAxisGenerator = value_axis_func(valueScale)\n\n    plot.append(\"g\")\n        .attr(\"id\", \"value-axis\")\n        .attr(\"transform\", \"translate(\" + value_axis_transform[0] + \",\" + value_axis_transform[1] + \")\")\n        .call(valueAxisGenerator)\n\n    return [labelScale, valueScale]\n}\n\nfunction draw_links(link_container: plot, links: ClusterLink[], xScale: scaleLinear | scaleLog, yScale: scaleLinear | scaleLog) {\n\n    link_container.selectAll(\".link\")\n        .data(links)\n        .enter()\n        .append(\"path\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", (d) => d.fillcolor)\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"class\", \"link\")\n        .attr(\"d\", function (d) {\n            return d3.line<Coord>()\n                .x((d) => xScale(d.x) || 0)\n                .y((d) => yScale(d.y) || 0)\n                (d.data)\n        })\n\n}\n\nfunction draw_nodes(node_container: plot, nodes: ClusterNode[], xScale: scaleLinear | scaleLog, yScale: scaleLinear | scaleLog) {\n\n    let elem = node_container.selectAll(\".node\")\n        .data(nodes)\n        .enter()\n        .append(\"g\")\n        .attr(\"transform\", function (d) { return \"translate(\" + xScale(d.x) + \",\" + yScale(d.y) + \")\" })\n        .attr(\"class\", \"node\")\n\n    let tooltip = d3.select(\"body\")\n        .append(\"div\")\n        .style(\"opacity\", 0)\n        .attr(\"class\", \"xtooltip\")\n        .style(\"background-color\", \"red\")\n        .style(\"border\", \"solid\")\n        .style(\"border-width\", \"2px\")\n        .style(\"border-radius\", \"5px\")\n        .style(\"padding\", \"5px\")\n        .style(\"position\", \"absolute\")\n    .on(\"mouseover\", function(this: HTMLElement, e: MouseEvent, d) {\n        if (e.target) { \n            d3.select(this).style(\"opacity\", 1) }\n    })\n    .on(\"mouseleave\", function(this: HTMLElement, e: MouseEvent, d) {\n        if (e.target) { \n            d3.select(this).style(\"opacity\", 0) }\n    })\n\n    let mouseover = function (this: SVGCircleElement | SVGTextElement, e: MouseEvent, d: ClusterNode) {\n        tooltip.style(\"opacity\", 1)\n        if (typeof(d.hovertext) === 'string') {\n            tooltip.html(d.hovertext)\n        } else {\n            let hovertext: string = \"\"\n            for (const [key, value] of Object.entries(d.hovertext)) {\n                hovertext += \"<strong>\"+ key + \"</strong>: \" + value + \"<br>\"\n            }\n            tooltip.html(hovertext)                        \n        }\n        \n        if (this.nodeName === 'circle') {\n            d3.select(this).attr(\"r\", d.radius * 1.5)\n        }\n    }\n\n    let mousemove = function (this: SVGCircleElement | SVGTextElement, e: MouseEvent, d: ClusterNode) {\n        tooltip            \n            .style(\"left\", e.x + \"px\")\n            .style(\"top\", e.y + \"px\")\n        if (this.nodeName === 'circle') {\n            d3.select(this).attr(\"r\", d.radius * 1.5)\n        }\n    }\n\n\n    let mouseleave = function (this: SVGCircleElement | SVGTextElement, e: MouseEvent, d: ClusterNode) {\n        tooltip\n            .style(\"opacity\", 0)\n        if (this.nodeName === 'circle') {\n            d3.select(this).attr(\"r\", d.radius)\n        }\n    }\n\n    elem.append(\"circle\")\n        .attr(\"fill\", (d) => d.fillcolor)\n        .attr(\"stroke\", (d) => d.edgecolor)\n        .attr(\"stroke-width\", 1.5)\n        .attr('r', (d) => d.radius)\n        .on(\"mouseover\", mouseover)\n        .on(\"mouseleave\", mouseleave)\n        .on(\"mousemove\", mousemove)\n\n\n    elem.append(\"text\")\n        .attr(\"dx\", (d) => 0)\n        .text((d) => d.label)\n        .attr(\"fill\", (d) => d.labelcolor)\n        .attr(\"font-size\", (d) => d.labelsize)\n        .attr(\"alignment-baseline\", \"central\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-weight\", \"bold\")\n        .on(\"mouseover\", mouseover)\n        .on(\"mouseleave\", mouseleave)\n        .on(\"mousemove\", mousemove)\n}\n\n/* // Add a click handler to our button. It will send data back to Streamlit.\nlet numClicks = 0\n\nbutton.onclick = function(): void {\n  // Increment numClicks, and pass the new value back to\n  // Streamlit via `Streamlit.setComponentValue`.\n  numClicks += 1\n  Streamlit.setComponentValue(numClicks)\n} */\n\n\n/**\n * The component's render function. This will be called immediately after\n * the component is initially loaded, and then again every time the\n * component gets new data from Python.\n */\nfunction onRender(event: Event): void {\n    // Get the RenderData from the event\n    const data = (event as CustomEvent<RenderData>).detail\n\n    let dendrogram: Dendrogram = data.args['data']\n    let scaleType = data.args['scale_type']\n    console.log(dendrogram)\n    let margin: Margin = { top: 50, right: 50, bottom: 50, left: 50 }\n    let label_margin_size = data.args['label_margin']\n    let dimensions: Dimensions = {\n        height: data.args['height'],\n        width: data.args['width'],\n        margin: margin,\n        innerHeight: 0,\n        innerWidth: 0,\n        orientation: data.args['orientation']\n    }\n\n    let margin_map = { 'top': Orientation.bottom, 'bottom': Orientation.top, 'left': Orientation.right, 'right': Orientation.left }\n    let label_margin: Orientation = margin_map[dimensions.orientation]\n\n    dimensions.margin[label_margin] = label_margin_size\n    dimensions.innerHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom\n    dimensions.innerWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right\n\n    let plot = create_container(dimensions)\n    let scales = create_axis(plot, dimensions, dendrogram, scaleType)\n\n    let xScale: scaleLinear | scaleLog\n    let yScale: scaleLinear | scaleLog\n\n    if (dimensions.orientation === Orientation.top || dimensions.orientation === Orientation.bottom) {\n        xScale = scales[0]\n        yScale = scales[1]\n        dendrogram.links.forEach(link => {\n            link.data = link.x.map(function (x, i) { return { 'x': x, 'y': link.y[i] } })\n        });\n    } else {\n        yScale = scales[0]\n        xScale = scales[1]\n        dendrogram.links.forEach(link => {\n            link.data = link.x.map(function (x, i) { return { 'y': x, 'x': link.y[i] } })\n        });\n        dendrogram.nodes.forEach(node => {\n            let x = node.x\n            node.x = node.y\n            node.y = x\n        });\n    }\n\n    let link_container = plot.append('g').attr(\"class\", \"link-container\")\n    let node_container = plot.append('g').attr(\"class\", \"node-container\")\n\n    draw_links(link_container, dendrogram.links, xScale, yScale)\n    draw_nodes(node_container, dendrogram.nodes, xScale, yScale)\n\n    userfuncs.postprocess(d3, dimensions, dendrogram)\n    Streamlit.setFrameHeight()\n}\n\n// Attach our `onRender` handler to Streamlit's render event.\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender)\n\n// Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\nStreamlit.setComponentReady()\n\n// Finally, tell Streamlit to update our initial height. We omit the\n// `height` parameter here to have it default to our scrollHeight.\nStreamlit.setFrameHeight()\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}