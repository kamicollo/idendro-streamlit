{"ast":null,"code":"import { Streamlit } from \"streamlit-component-lib\";\nimport * as d3 from 'd3';\nvar Orientation;\n\n(function (Orientation) {\n  Orientation[\"top\"] = \"top\";\n  Orientation[\"bottom\"] = \"bottom\";\n  Orientation[\"right\"] = \"right\";\n  Orientation[\"left\"] = \"left\";\n})(Orientation || (Orientation = {}));\n\nfunction create_container(dimensions) {\n  if (d3.select(\"#idendro\")) {\n    d3.select(\"#idendro\").remove();\n  } // append svg element to the body of the page\n  // set dimensions and position of the svg element\n\n\n  let svg = d3.select(\"body\").append(\"svg\").attr(\"id\", \"idendro\").attr(\"width\", dimensions.width).attr(\"height\", dimensions.height);\n  let plot = svg.append(\"g\").attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + dimensions.margin.top + \")\").attr(\"id\", \"idendro-container\");\n  return plot;\n}\n\nfunction create_axis(plot, dimensions, dendrogram) {\n  let label_limits = dendrogram.x_limits;\n  let value_limits = dendrogram.y_limits;\n  let label_range,\n      value_range = [0, 0];\n  let label_axis_func, value_axis_func;\n  let label_axis_transform = [0, 0];\n  let value_axis_transform = [0, 0]; //handle orientation impact on scale ranges & positioning\n\n  if (dimensions.orientation === Orientation.top || dimensions.orientation === Orientation.bottom) {\n    label_range = [0, dimensions.innerWidth];\n    value_axis_func = d3.axisLeft;\n    value_axis_transform = [0, 0];\n\n    if (dimensions.orientation === Orientation.top) {\n      value_range = [dimensions.innerHeight, 0];\n      label_axis_func = d3.axisBottom;\n      label_axis_transform = [0, dimensions.innerHeight];\n    } else {\n      value_range = [0, dimensions.innerHeight];\n      label_axis_func = d3.axisTop;\n    }\n  } else {\n    value_axis_func = d3.axisBottom;\n    label_range = [dimensions.innerHeight, 0];\n    value_axis_transform = [0, dimensions.innerHeight];\n\n    if (dimensions.orientation === Orientation.left) {\n      value_range = [0, dimensions.innerWidth];\n      label_axis_func = d3.axisLeft;\n    } else {\n      value_range = [dimensions.innerWidth, 0];\n      label_axis_func = d3.axisRight;\n      label_axis_transform = [dimensions.innerWidth, 0];\n    }\n  } //get label-axis positions and labels\n\n\n  let label_axis_pos = dendrogram.axis_labels.map(x => x.x);\n  let label_axis_label = dendrogram.axis_labels.map(x => x.label); //create label-axis\n\n  let labelScale = d3.scaleLinear().domain(label_limits).range(label_range);\n  let labelAxisGenerator = label_axis_func(labelScale).tickValues(label_axis_pos).tickFormat((d, i) => label_axis_label[i]);\n  let labelAxis = plot.append(\"g\").attr(\"id\", \"label-axis\").attr(\"transform\", \"translate(\" + label_axis_transform[0] + \",\" + label_axis_transform[1] + \")\").call(labelAxisGenerator); //create value-axis\n\n  let valueScale = d3.scaleLinear().domain(value_limits).range(value_range);\n  let valueAxisGenerator = value_axis_func(valueScale);\n  let valueAxis = plot.append(\"g\").attr(\"id\", \"value-axis\").attr(\"transform\", \"translate(\" + value_axis_transform[0] + \",\" + value_axis_transform[1] + \")\").call(valueAxisGenerator);\n}\n/* // Add a click handler to our button. It will send data back to Streamlit.\nlet numClicks = 0\n\nbutton.onclick = function(): void {\n  // Increment numClicks, and pass the new value back to\n  // Streamlit via `Streamlit.setComponentValue`.\n  numClicks += 1\n  Streamlit.setComponentValue(numClicks)\n} */\n\n/**\n * The component's render function. This will be called immediately after\n * the component is initially loaded, and then again every time the\n * component gets new data from Python.\n */\n\n\nfunction onRender(event) {\n  // Get the RenderData from the event\n  const data = event.detail;\n  var dendrogram = data.args['data'];\n  let margin = {\n    top: 20,\n    right: 20,\n    bottom: 20,\n    left: 20\n  };\n  let dimensions = {\n    height: data.args['height'],\n    width: data.args['width'],\n    margin: margin,\n    innerHeight: 0,\n    innerWidth: 0,\n    orientation: data.args['orientation']\n  };\n  dimensions.margin[dimensions.orientation] = 50;\n  dimensions.innerHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom;\n  dimensions.innerWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\n  let plot = create_container(dimensions);\n  create_axis(plot, dimensions, dendrogram);\n  Streamlit.setFrameHeight();\n} // Attach our `onRender` handler to Streamlit's render event.\n\n\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender); // Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\n\nStreamlit.setComponentReady(); // Finally, tell Streamlit to update our initial height. We omit the\n// `height` parameter here to have it default to our scrollHeight.\n\nStreamlit.setFrameHeight();","map":{"version":3,"names":["Streamlit","d3","Orientation","create_container","dimensions","select","remove","svg","append","attr","width","height","plot","margin","left","top","create_axis","dendrogram","label_limits","x_limits","value_limits","y_limits","label_range","value_range","label_axis_func","value_axis_func","label_axis_transform","value_axis_transform","orientation","bottom","innerWidth","axisLeft","innerHeight","axisBottom","axisTop","axisRight","label_axis_pos","axis_labels","map","x","label_axis_label","label","labelScale","scaleLinear","domain","range","labelAxisGenerator","tickValues","tickFormat","d","i","labelAxis","call","valueScale","valueAxisGenerator","valueAxis","onRender","event","data","detail","args","right","setFrameHeight","events","addEventListener","RENDER_EVENT","setComponentReady"],"sources":["/home/aurimas/coding/idendro/frontend/src/index.tsx"],"sourcesContent":["import { Streamlit, RenderData } from \"streamlit-component-lib\"\nimport * as d3 from 'd3'\n\ninterface AxisLabel {\n    x: number\n    label: string\n    labelsize: number\n}\n\ninterface ClusterLink {\n    x: number[]\n    y: number[]\n    fillcolor: string\n    size: number\n}\n\ninterface ClusterNode {\n    x: number\n    y: number\n    edgecolor: string\n    fillcolor: string\n    label: string\n    hovertext: Object[] | string\n    size: number\n    labelsize: number\n    labelcolor: string\n\n}\n\ninterface Dendrogram {\n    axis_labels: AxisLabel[]\n    links: ClusterLink[]\n    nodes: ClusterNode[]\n    x_limits: [number, number]\n    y_limits: [number, number]\n}\n\ninterface Dimensions {\n    margin: Margin\n    height: number\n    width: number\n    innerHeight: number\n    innerWidth: number,\n    orientation: Orientation\n}\n\nenum Orientation {\n    top = \"top\",\n    bottom = \"bottom\",\n    right = \"right\",\n    left = \"left\"\n}\n\ninterface Margin {\n    top: number\n    right: number\n    bottom: number\n    left: number\n}\n\ninterface plot extends d3.Selection<SVGGElement, unknown, HTMLElement, any> {\n    \n}\n\nfunction create_container(dimensions: Dimensions): plot {\n    \n    \n    if (d3.select(\"#idendro\")) {\n        d3.select(\"#idendro\").remove()\n    }\n    // append svg element to the body of the page\n    // set dimensions and position of the svg element\n    let svg = d3\n        .select(\"body\")\n        .append(\"svg\")\n        .attr(\"id\", \"idendro\")\n        .attr(\"width\", dimensions.width)\n        .attr(\"height\", dimensions.height)\n\n    let plot = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + dimensions.margin.top + \")\")\n        .attr(\"id\", \"idendro-container\");\n\n    return plot\n}\n\nfunction create_axis(plot: plot, dimensions: Dimensions, dendrogram: Dendrogram) {\n\n    let label_limits = dendrogram.x_limits\n    let value_limits = dendrogram.y_limits\n\n    let label_range, value_range = [0, 0]\n    let label_axis_func, value_axis_func : CallableFunction\n    let label_axis_transform = [0, 0]\n    let value_axis_transform = [0, 0]    \n\n    //handle orientation impact on scale ranges & positioning\n    if (dimensions.orientation === Orientation.top || dimensions.orientation === Orientation.bottom) {\n        label_range = [0, dimensions.innerWidth]\n        value_axis_func = d3.axisLeft\n        value_axis_transform = [0, 0]\n        if (dimensions.orientation === Orientation.top) {\n            value_range = [dimensions.innerHeight, 0]\n            label_axis_func = d3.axisBottom\n            label_axis_transform = [0, dimensions.innerHeight]\n        } else {\n            value_range = [0, dimensions.innerHeight]\n            label_axis_func = d3.axisTop            \n        }        \n    } else {\n        value_axis_func = d3.axisBottom        \n        label_range = [dimensions.innerHeight, 0]\n        value_axis_transform = [0, dimensions.innerHeight]\n        if (dimensions.orientation === Orientation.left) {\n            value_range = [0, dimensions.innerWidth]\n            label_axis_func = d3.axisLeft\n        } else {\n            value_range = [dimensions.innerWidth, 0]\n            label_axis_func = d3.axisRight\n            label_axis_transform = [dimensions.innerWidth, 0]\n        }\n    }\n\n    //get label-axis positions and labels\n    let label_axis_pos = dendrogram.axis_labels.map((x) => x.x)\n    let label_axis_label = dendrogram.axis_labels.map((x) => x.label)\n    \n    //create label-axis\n    let labelScale = d3.scaleLinear()\n        .domain(label_limits).range(label_range)\n\n    let labelAxisGenerator = label_axis_func(labelScale)\n        .tickValues(label_axis_pos)\n        .tickFormat((d,i) => label_axis_label[i])\n\n    let labelAxis = plot.append(\"g\")\n        .attr(\"id\", \"label-axis\")            \n        .attr(\"transform\", \"translate(\" + label_axis_transform[0]  + \",\" + label_axis_transform[1] + \")\")\n        .call(labelAxisGenerator)\n \n    //create value-axis\n    let valueScale = d3.scaleLinear()\n        .domain(value_limits).range(value_range)\n\n    let valueAxisGenerator = value_axis_func(valueScale)\n\n    let valueAxis = plot.append(\"g\")\n        .attr(\"id\", \"value-axis\")            \n        .attr(\"transform\", \"translate(\" + value_axis_transform[0]  + \",\" + value_axis_transform[1] + \")\")\n        .call(valueAxisGenerator)\n}\n\n/* // Add a click handler to our button. It will send data back to Streamlit.\nlet numClicks = 0\n\nbutton.onclick = function(): void {\n  // Increment numClicks, and pass the new value back to\n  // Streamlit via `Streamlit.setComponentValue`.\n  numClicks += 1\n  Streamlit.setComponentValue(numClicks)\n} */\n\n\n/**\n * The component's render function. This will be called immediately after\n * the component is initially loaded, and then again every time the\n * component gets new data from Python.\n */\nfunction onRender(event: Event): void {\n    // Get the RenderData from the event\n    const data = (event as CustomEvent<RenderData>).detail\n\n    var dendrogram: Dendrogram = data.args['data']\n    let margin: Margin = { top: 20, right: 20, bottom: 20, left: 20 }    \n    let dimensions: Dimensions = {\n        height:  data.args['height'],\n        width: data.args['width'],\n        margin: margin,\n        innerHeight: 0,\n        innerWidth: 0,\n        orientation: data.args['orientation']\n    }\n    \n    dimensions.margin[dimensions.orientation] = 50    \n    dimensions.innerHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom\n    dimensions.innerWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right    \n    \n    let plot = create_container(dimensions)\n    create_axis(plot, dimensions, dendrogram)\n\n    Streamlit.setFrameHeight()\n}\n\n// Attach our `onRender` handler to Streamlit's render event.\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender)\n\n// Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\nStreamlit.setComponentReady()\n\n// Finally, tell Streamlit to update our initial height. We omit the\n// `height` parameter here to have it default to our scrollHeight.\nStreamlit.setFrameHeight()\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}